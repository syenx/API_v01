//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalendarService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarRequest", Namespace="http://schemas.datacontract.org/2004/07/BDS.Calendar.BusinessEntities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalendarService.CalendarRequestCoppClark))]
    public partial class CalendarRequest : object
    {
        
        private System.DateTime BeginDateField;
        
        private System.DateTime EndDateField;
        
        private int QttWorkDaysField;
        
        private int SourceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginDate
        {
            get
            {
                return this.BeginDateField;
            }
            set
            {
                this.BeginDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                this.EndDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QttWorkDays
        {
            get
            {
                return this.QttWorkDaysField;
            }
            set
            {
                this.QttWorkDaysField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceId
        {
            get
            {
                return this.SourceIdField;
            }
            set
            {
                this.SourceIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarRequestCoppClark", Namespace="http://schemas.datacontract.org/2004/07/BDS.Calendar.BusinessEntities")]
    public partial class CalendarRequestCoppClark : CalendarService.CalendarRequest
    {
        
        private CalendarService.EnumFileTypeCoppClark FileTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalendarService.EnumFileTypeCoppClark FileType
        {
            get
            {
                return this.FileTypeField;
            }
            set
            {
                this.FileTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumFileTypeCoppClark", Namespace="http://schemas.datacontract.org/2004/07/BDS.Calendar.BusinessEntities")]
    public enum EnumFileTypeCoppClark : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FINANCIAL_CENTRE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CURRENCY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCHANGE_SETTLEMENT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCHANGE_TRADING = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISCELLANEOUS = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarResponse", Namespace="http://schemas.datacontract.org/2004/07/BDS.Calendar.BusinessEntities")]
    public partial class CalendarResponse : object
    {
        
        private CalendarService.Calendar[] CalendarListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalendarService.Calendar[] CalendarList
        {
            get
            {
                return this.CalendarListField;
            }
            set
            {
                this.CalendarListField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Calendar", Namespace="http://schemas.datacontract.org/2004/07/BDS.Calendar.BusinessEntities")]
    public partial class Calendar : object
    {
        
        private System.DateTime DateCalendarField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCalendar
        {
            get
            {
                return this.DateCalendarField;
            }
            set
            {
                this.DateCalendarField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalendarService.ICalendarServiceContract")]
    public interface ICalendarServiceContract
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateIsWorkDay", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateIsWorkDayResponse")]
        bool DateIsWorkDay(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateIsWorkDay", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateIsWorkDayResponse")]
        System.Threading.Tasks.Task<bool> DateIsWorkDayAsync(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateQttWorkDays", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateQttWorkDaysResponse")]
        int DateQttWorkDays(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateQttWorkDays", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateQttWorkDaysResponse")]
        System.Threading.Tasks.Task<int> DateQttWorkDaysAsync(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDay", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDayResponse")]
        System.DateTime DataDecodeBySourceFirstDay(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDay", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDayResponse")]
        System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceFirstDayAsync(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDay", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDayResponse")]
        System.DateTime DataDecodeBySourceLastDay(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDay", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDayResponse")]
        System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceLastDayAsync(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateAddWorkDays", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateAddWorkDaysResponse")]
        System.DateTime DateAddWorkDays(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateAddWorkDays", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateAddWorkDaysResponse")]
        System.Threading.Tasks.Task<System.DateTime> DateAddWorkDaysAsync(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/GetHoliday", ReplyAction="http://tempuri.org/ICalendarServiceContract/GetHolidayResponse")]
        CalendarService.CalendarResponse GetHoliday(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/GetHoliday", ReplyAction="http://tempuri.org/ICalendarServiceContract/GetHolidayResponse")]
        System.Threading.Tasks.Task<CalendarService.CalendarResponse> GetHolidayAsync(CalendarService.CalendarRequest calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateIsWorkDayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateIsWorkDayCoppClarkResponse")]
        bool DateIsWorkDayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateIsWorkDayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateIsWorkDayCoppClarkResponse")]
        System.Threading.Tasks.Task<bool> DateIsWorkDayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateQttWorkDaysCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateQttWorkDaysCoppClarkResponse")]
        int DateQttWorkDaysCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateQttWorkDaysCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateQttWorkDaysCoppClarkResponse")]
        System.Threading.Tasks.Task<int> DateQttWorkDaysCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDayCoppClarkRe" +
            "sponse")]
        System.DateTime DataDecodeBySourceFirstDayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceFirstDayCoppClarkRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceFirstDayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDayCoppClarkRes" +
            "ponse")]
        System.DateTime DataDecodeBySourceLastDayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DataDecodeBySourceLastDayCoppClarkRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceLastDayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateAddWorkDaysCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateAddWorkDaysCoppClarkResponse")]
        System.DateTime DateAddWorkDaysCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/DateAddWorkDaysCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/DateAddWorkDaysCoppClarkResponse")]
        System.Threading.Tasks.Task<System.DateTime> DateAddWorkDaysCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/GetHolidayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/GetHolidayCoppClarkResponse")]
        CalendarService.CalendarResponse GetHolidayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarServiceContract/GetHolidayCoppClark", ReplyAction="http://tempuri.org/ICalendarServiceContract/GetHolidayCoppClarkResponse")]
        System.Threading.Tasks.Task<CalendarService.CalendarResponse> GetHolidayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ICalendarServiceContractChannel : CalendarService.ICalendarServiceContract, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class CalendarServiceContractClient : System.ServiceModel.ClientBase<CalendarService.ICalendarServiceContract>, CalendarService.ICalendarServiceContract
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CalendarServiceContractClient() : 
                base(CalendarServiceContractClient.GetDefaultBinding(), CalendarServiceContractClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICalendarServiceContract.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceContractClient(EndpointConfiguration endpointConfiguration) : 
                base(CalendarServiceContractClient.GetBindingForEndpoint(endpointConfiguration), CalendarServiceContractClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceContractClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CalendarServiceContractClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceContractClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CalendarServiceContractClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool DateIsWorkDay(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DateIsWorkDay(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<bool> DateIsWorkDayAsync(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DateIsWorkDayAsync(calendarRequest);
        }
        
        public int DateQttWorkDays(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DateQttWorkDays(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<int> DateQttWorkDaysAsync(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DateQttWorkDaysAsync(calendarRequest);
        }
        
        public System.DateTime DataDecodeBySourceFirstDay(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DataDecodeBySourceFirstDay(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceFirstDayAsync(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DataDecodeBySourceFirstDayAsync(calendarRequest);
        }
        
        public System.DateTime DataDecodeBySourceLastDay(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DataDecodeBySourceLastDay(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceLastDayAsync(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DataDecodeBySourceLastDayAsync(calendarRequest);
        }
        
        public System.DateTime DateAddWorkDays(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DateAddWorkDays(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> DateAddWorkDaysAsync(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.DateAddWorkDaysAsync(calendarRequest);
        }
        
        public CalendarService.CalendarResponse GetHoliday(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.GetHoliday(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<CalendarService.CalendarResponse> GetHolidayAsync(CalendarService.CalendarRequest calendarRequest)
        {
            return base.Channel.GetHolidayAsync(calendarRequest);
        }
        
        public bool DateIsWorkDayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DateIsWorkDayCoppClark(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<bool> DateIsWorkDayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DateIsWorkDayCoppClarkAsync(calendarRequest);
        }
        
        public int DateQttWorkDaysCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DateQttWorkDaysCoppClark(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<int> DateQttWorkDaysCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DateQttWorkDaysCoppClarkAsync(calendarRequest);
        }
        
        public System.DateTime DataDecodeBySourceFirstDayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DataDecodeBySourceFirstDayCoppClark(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceFirstDayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DataDecodeBySourceFirstDayCoppClarkAsync(calendarRequest);
        }
        
        public System.DateTime DataDecodeBySourceLastDayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DataDecodeBySourceLastDayCoppClark(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> DataDecodeBySourceLastDayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DataDecodeBySourceLastDayCoppClarkAsync(calendarRequest);
        }
        
        public System.DateTime DateAddWorkDaysCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DateAddWorkDaysCoppClark(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> DateAddWorkDaysCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.DateAddWorkDaysCoppClarkAsync(calendarRequest);
        }
        
        public CalendarService.CalendarResponse GetHolidayCoppClark(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.GetHolidayCoppClark(calendarRequest);
        }
        
        public System.Threading.Tasks.Task<CalendarService.CalendarResponse> GetHolidayCoppClarkAsync(CalendarService.CalendarRequestCoppClark calendarRequest)
        {
            return base.Channel.GetHolidayCoppClarkAsync(calendarRequest);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICalendarServiceContract))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICalendarServiceContract))
            {
                return new System.ServiceModel.EndpointAddress("http://webfarm-a-rj/EDM/BdsCalendar/CalendarServicehost/CalendarServiceHost.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CalendarServiceContractClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICalendarServiceContract);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CalendarServiceContractClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICalendarServiceContract);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ICalendarServiceContract,
        }
    }
}
